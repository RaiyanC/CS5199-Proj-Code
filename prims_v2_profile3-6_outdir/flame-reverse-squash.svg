<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="166" onload="init(evt)" viewBox="0 0 1200 166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="166.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="149" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="149" > </text>
<g id="frames">
<g >
<title>PrintString for hashmaps@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:59 (17 samples, 0.02%)</title><rect x="17.4" y="69" width="0.2" height="15.0" fill="rgb(252,228,16)" rx="2" ry="2" />
<text  x="20.40" y="79.5" ></text>
</g>
<g >
<title>NextIterator_HashMap@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:170 (158 samples, 0.14%)</title><rect x="11.7" y="101" width="1.7" height="15.0" fill="rgb(237,66,27)" rx="2" ry="2" />
<text  x="14.66" y="111.5" ></text>
</g>
<g >
<title>nameless@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/session.g:52 (19 samples, 0.02%)</title><rect x="21.2" y="101" width="0.2" height="15.0" fill="rgb(220,86,4)" rx="2" ry="2" />
<text  x="24.24" y="111.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (19 samples, 0.02%)</title><rect x="20.9" y="85" width="0.2" height="15.0" fill="rgb(252,218,47)" rx="2" ry="2" />
<text  x="23.90" y="95.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (25 samples, 0.02%)</title><rect x="11.4" y="69" width="0.2" height="15.0" fill="rgb(234,116,14)" rx="2" ry="2" />
<text  x="14.36" y="79.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (48 samples, 0.04%)</title><rect x="15.9" y="85" width="0.6" height="15.0" fill="rgb(234,100,38)" rx="2" ry="2" />
<text  x="18.94" y="95.5" ></text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (10 samples, 0.01%)</title><rect x="1189.9" y="53" width="0.1" height="15.0" fill="rgb(239,106,47)" rx="2" ry="2" />
<text  x="1192.89" y="63.5" ></text>
</g>
<g >
<title>all (109,673 samples, 100%)</title><rect x="10.0" y="117" width="1180.0" height="15.0" fill="rgb(230,4,53)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>PrintString for hashmaps@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:59 (85 samples, 0.08%)</title><rect x="16.5" y="85" width="0.9" height="15.0" fill="rgb(208,178,26)" rx="2" ry="2" />
<text  x="19.46" y="95.5" ></text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (11 samples, 0.01%)</title><rect x="10.7" y="37" width="0.1" height="15.0" fill="rgb(243,162,20)" rx="2" ry="2" />
<text  x="13.68" y="47.5" ></text>
</g>
<g >
<title>PrintString for hashmaps@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:59 (27 samples, 0.02%)</title><rect x="13.1" y="85" width="0.3" height="15.0" fill="rgb(244,215,14)" rx="2" ry="2" />
<text  x="16.07" y="95.5" ></text>
</g>
<g >
<title>PrintString for hashmaps@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:59 (29 samples, 0.03%)</title><rect x="17.7" y="69" width="0.3" height="15.0" fill="rgb(244,89,44)" rx="2" ry="2" />
<text  x="20.69" y="79.5" ></text>
</g>
<g >
<title>String for a (finite) list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:295 (29 samples, 0.03%)</title><rect x="17.7" y="85" width="0.3" height="15.0" fill="rgb(220,65,31)" rx="2" ry="2" />
<text  x="20.69" y="95.5" ></text>
</g>
<g >
<title>String for a (finite) list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:295 (17 samples, 0.02%)</title><rect x="17.4" y="85" width="0.2" height="15.0" fill="rgb(218,65,18)" rx="2" ry="2" />
<text  x="20.40" y="95.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (42 samples, 0.04%)</title><rect x="10.8" y="53" width="0.4" height="15.0" fill="rgb(211,33,2)" rx="2" ry="2" />
<text  x="13.80" y="63.5" ></text>
</g>
<g >
<title>PositionBound for a list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:1756 (21 samples, 0.02%)</title><rect x="13.7" y="101" width="0.2" height="15.0" fill="rgb(207,166,3)" rx="2" ry="2" />
<text  x="16.68" y="111.5" ></text>
</g>
<g >
<title>nameless@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:208 (108,609 samples, 99.03%)</title><rect x="21.4" y="101" width="1168.6" height="15.0" fill="rgb(240,116,23)" rx="2" ry="2" />
<text  x="24.45" y="111.5" >nameless@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:208</text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (27 samples, 0.02%)</title><rect x="13.1" y="53" width="0.3" height="15.0" fill="rgb(212,166,51)" rx="2" ry="2" />
<text  x="16.07" y="63.5" ></text>
</g>
<g >
<title>MakeIterator_HashMap@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:198 (21 samples, 0.02%)</title><rect x="13.7" y="85" width="0.2" height="15.0" fill="rgb(205,141,21)" rx="2" ry="2" />
<text  x="16.68" y="95.5" ></text>
</g>
<g >
<title>PrintObj default method delegating to PrintString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/object.gi:164 (17 samples, 0.02%)</title><rect x="17.4" y="53" width="0.2" height="15.0" fill="rgb(242,45,5)" rx="2" ry="2" />
<text  x="20.40" y="63.5" ></text>
</g>
<g >
<title>PrintObj default method delegating to PrintString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/object.gi:164 (11 samples, 0.01%)</title><rect x="10.7" y="53" width="0.1" height="15.0" fill="rgb(212,33,39)" rx="2" ry="2" />
<text  x="13.68" y="63.5" ></text>
</g>
<g >
<title>nameless@../prims_v2_for_testing.g:57 (13 samples, 0.01%)</title><rect x="21.1" y="101" width="0.1" height="15.0" fill="rgb(210,54,45)" rx="2" ry="2" />
<text  x="24.10" y="111.5" ></text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (29 samples, 0.03%)</title><rect x="17.7" y="37" width="0.3" height="15.0" fill="rgb(211,1,16)" rx="2" ry="2" />
<text  x="20.69" y="47.5" ></text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (85 samples, 0.08%)</title><rect x="16.5" y="53" width="0.9" height="15.0" fill="rgb(232,148,22)" rx="2" ry="2" />
<text  x="19.46" y="63.5" ></text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (17 samples, 0.02%)</title><rect x="17.4" y="37" width="0.2" height="15.0" fill="rgb(237,73,44)" rx="2" ry="2" />
<text  x="20.40" y="47.5" ></text>
</g>
<g >
<title>PrintObj default method delegating to PrintString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/object.gi:164 (27 samples, 0.02%)</title><rect x="13.1" y="69" width="0.3" height="15.0" fill="rgb(251,126,3)" rx="2" ry="2" />
<text  x="16.07" y="79.5" ></text>
</g>
<g >
<title>Size method@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/coll.gi:178 (48 samples, 0.04%)</title><rect x="15.9" y="101" width="0.6" height="15.0" fill="rgb(206,22,12)" rx="2" ry="2" />
<text  x="18.94" y="111.5" ></text>
</g>
<g >
<title>KeyValueIterator for a hash set@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:227 (28 samples, 0.03%)</title><rect x="11.4" y="85" width="0.3" height="15.0" fill="rgb(218,35,1)" rx="2" ry="2" />
<text  x="14.36" y="95.5" ></text>
</g>
<g >
<title>MakeIterator_HashMap@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:198 (47 samples, 0.04%)</title><rect x="10.8" y="85" width="0.5" height="15.0" fill="rgb(239,161,31)" rx="2" ry="2" />
<text  x="13.80" y="95.5" ></text>
</g>
<g >
<title>PrintString for hashmaps@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:59 (10 samples, 0.01%)</title><rect x="1189.9" y="85" width="0.1" height="15.0" fill="rgb(245,160,40)" rx="2" ry="2" />
<text  x="1192.89" y="95.5" ></text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (218 samples, 0.20%)</title><rect x="18.2" y="85" width="2.3" height="15.0" fill="rgb(209,64,12)" rx="2" ry="2" />
<text  x="21.18" y="95.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (30 samples, 0.03%)</title><rect x="13.4" y="85" width="0.3" height="15.0" fill="rgb(239,44,4)" rx="2" ry="2" />
<text  x="16.36" y="95.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (108,599 samples, 99.02%)</title><rect x="21.4" y="85" width="1168.5" height="15.0" fill="rgb(206,13,54)" rx="2" ry="2" />
<text  x="24.45" y="95.5" >Prims@../prims_v2_for_testing.g:2</text>
</g>
<g >
<title>PrintString for hashmaps@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:59 (11 samples, 0.01%)</title><rect x="10.7" y="69" width="0.1" height="15.0" fill="rgb(238,72,44)" rx="2" ry="2" />
<text  x="13.68" y="79.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (39 samples, 0.04%)</title><rect x="10.2" y="85" width="0.4" height="15.0" fill="rgb(206,179,3)" rx="2" ry="2" />
<text  x="13.17" y="95.5" ></text>
</g>
<g >
<title>PrintObj default method delegating to PrintString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/object.gi:164 (85 samples, 0.08%)</title><rect x="16.5" y="69" width="0.9" height="15.0" fill="rgb(222,187,51)" rx="2" ry="2" />
<text  x="19.46" y="79.5" ></text>
</g>
<g >
<title>KeyValueIterator for a hash set@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:227 (21 samples, 0.02%)</title><rect x="13.7" y="69" width="0.2" height="15.0" fill="rgb(215,82,48)" rx="2" ry="2" />
<text  x="16.68" y="79.5" ></text>
</g>
<g >
<title>IteratorByFunctions@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/coll.gi:920 (47 samples, 0.04%)</title><rect x="10.8" y="101" width="0.5" height="15.0" fill="rgb(222,32,3)" rx="2" ry="2" />
<text  x="13.80" y="111.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (131 samples, 0.12%)</title><rect x="11.7" y="85" width="1.4" height="15.0" fill="rgb(236,193,47)" rx="2" ry="2" />
<text  x="14.66" y="95.5" ></text>
</g>
<g >
<title>ViewObj for a finite list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:3863 (19 samples, 0.02%)</title><rect x="20.5" y="101" width="0.2" height="15.0" fill="rgb(218,96,14)" rx="2" ry="2" />
<text  x="23.52" y="111.5" ></text>
</g>
<g >
<title>PrintObj default method delegating to PrintString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/object.gi:164 (29 samples, 0.03%)</title><rect x="17.7" y="53" width="0.3" height="15.0" fill="rgb(239,92,0)" rx="2" ry="2" />
<text  x="20.69" y="63.5" ></text>
</g>
<g >
<title>MakeIterator_HashMap@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:198 (28 samples, 0.03%)</title><rect x="11.4" y="101" width="0.3" height="15.0" fill="rgb(245,84,39)" rx="2" ry="2" />
<text  x="14.36" y="111.5" ></text>
</g>
<g >
<title>ViewObj default method trying ViewString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/object.gi:419 (223 samples, 0.20%)</title><rect x="18.1" y="101" width="2.4" height="15.0" fill="rgb(229,87,16)" rx="2" ry="2" />
<text  x="21.12" y="111.5" ></text>
</g>
<g >
<title>String for an integer@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/cyclotom.g:997 (19 samples, 0.02%)</title><rect x="17.4" y="101" width="0.2" height="15.0" fill="rgb(223,51,36)" rx="2" ry="2" />
<text  x="20.40" y="111.5" ></text>
</g>
<g >
<title>HashMap@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:19 (39 samples, 0.04%)</title><rect x="10.2" y="101" width="0.4" height="15.0" fill="rgb(217,218,27)" rx="2" ry="2" />
<text  x="13.17" y="111.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (176 samples, 0.16%)</title><rect x="13.9" y="101" width="1.9" height="15.0" fill="rgb(253,222,12)" rx="2" ry="2" />
<text  x="16.91" y="111.5" ></text>
</g>
<g >
<title>String for a (finite) list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:295 (85 samples, 0.08%)</title><rect x="16.5" y="101" width="0.9" height="15.0" fill="rgb(210,76,23)" rx="2" ry="2" />
<text  x="19.46" y="111.5" ></text>
</g>
<g >
<title>Pop for a binary heap in plain representation@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/binaryheap.gi:61 (30 samples, 0.03%)</title><rect x="13.4" y="101" width="0.3" height="15.0" fill="rgb(205,214,6)" rx="2" ry="2" />
<text  x="16.36" y="111.5" ></text>
</g>
<g >
<title>ViewObj method@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/teaching.g:775 (12 samples, 0.01%)</title><rect x="20.7" y="101" width="0.2" height="15.0" fill="rgb(244,98,3)" rx="2" ry="2" />
<text  x="23.73" y="111.5" ></text>
</g>
<g >
<title>Prims@../prims_v2_for_testing.g:2 (18 samples, 0.02%)</title><rect x="13.7" y="53" width="0.2" height="15.0" fill="rgb(214,202,52)" rx="2" ry="2" />
<text  x="16.68" y="63.5" ></text>
</g>
<g >
<title>IsEmptyString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/string.g:295 (11 samples, 0.01%)</title><rect x="10.7" y="101" width="0.1" height="15.0" fill="rgb(250,6,11)" rx="2" ry="2" />
<text  x="13.68" y="111.5" ></text>
</g>
<g >
<title>PrintObj default method delegating to PrintString@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/object.gi:164 (10 samples, 0.01%)</title><rect x="1189.9" y="69" width="0.1" height="15.0" fill="rgb(214,108,46)" rx="2" ry="2" />
<text  x="1192.89" y="79.5" ></text>
</g>
<g >
<title>String for a (finite) list@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/list.gi:295 (11 samples, 0.01%)</title><rect x="10.7" y="85" width="0.1" height="15.0" fill="rgb(221,85,24)" rx="2" ry="2" />
<text  x="13.68" y="95.5" ></text>
</g>
<g >
<title>in for a hash map and a key@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:117 (19 samples, 0.02%)</title><rect x="20.9" y="101" width="0.2" height="15.0" fill="rgb(247,158,2)" rx="2" ry="2" />
<text  x="23.90" y="111.5" ></text>
</g>
<g >
<title>String method@/cs/home/mrc7/Documents/cs5199/gap-4.12.2/lib/teaching.g:798 (41 samples, 0.04%)</title><rect x="17.6" y="101" width="0.4" height="15.0" fill="rgb(216,146,7)" rx="2" ry="2" />
<text  x="20.61" y="111.5" ></text>
</g>
<g >
<title>KeyValueIterator for a hash set@/home/mrc7/.gap/pkg/datastructures-0.3.0/gap/hashmap.gi:227 (47 samples, 0.04%)</title><rect x="10.8" y="69" width="0.5" height="15.0" fill="rgb(211,91,49)" rx="2" ry="2" />
<text  x="13.80" y="79.5" ></text>
</g>
</g>
</svg>
